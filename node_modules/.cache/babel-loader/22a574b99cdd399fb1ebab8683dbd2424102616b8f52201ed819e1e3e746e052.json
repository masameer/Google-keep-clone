{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Accordian.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { questions } from \"./Api\";\nimport Accordian1 from \"./Accordian1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Accordian = () => {\n  _s();\n  const [data] = useState(questions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" React Interview and questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), data.map(curElem => {\n        const {\n          id\n        } = curElem;\n        return /*#__PURE__*/_jsxDEV(Accordian1, {\n          ...curElem\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 31\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n_s(Accordian, \"4CF1wp4sae356nZkkr/cKJWv6ks=\");\n_c = Accordian;\nexport default Accordian;\nvar _c;\n$RefreshReg$(_c, \"Accordian\");","map":{"version":3,"names":["React","useState","questions","Accordian1","jsxDEV","_jsxDEV","Fragment","_Fragment","Accordian","_s","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","curElem","id","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Accordian.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { questions } from \"./Api\";\r\nimport Accordian1 from \"./Accordian1\";\r\n\r\n\r\nconst Accordian =()=>{\r\n\r\n       const [data, ]= useState(questions)\r\n       \r\n       return (\r\n           <>\r\n             \r\n             <section className=\"main_div\">\r\n                <h1> React Interview and questions</h1>\r\n                {\r\n               \r\n                  data.map((curElem) =>{\r\n                     const {id} = curElem\r\n                         return (\r\n                              <Accordian1 \r\n                                 key ={id} {...curElem}\r\n                              />\r\n                         )\r\n                    })\r\n                }\r\n            </section>\r\n           </>\r\n\r\n       )\r\n\r\n\r\n}\r\nexport default Accordian"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAMC,SAAS,GAAEA,CAAA,KAAI;EAAAC,EAAA;EAEd,MAAM,CAACC,IAAI,CAAG,GAAET,QAAQ,CAACC,SAAS,CAAC;EAEnC,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAEEN,OAAA;MAASO,SAAS,EAAC,UAAU;MAAAD,QAAA,gBAC1BN,OAAA;QAAAM,QAAA,EAAI;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGrCN,IAAI,CAACO,GAAG,CAAEC,OAAO,IAAI;QAClB,MAAM;UAACC;QAAE,CAAC,GAAGD,OAAO;QAChB,oBACKb,OAAA,CAACF,UAAU;UAAA,GACMe;QAAO,GAAfC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAEZ,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC,gBACT,CAAC;AAKd,CAAC;AAAAP,EAAA,CA1BKD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AA2Bf,eAAeA,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}