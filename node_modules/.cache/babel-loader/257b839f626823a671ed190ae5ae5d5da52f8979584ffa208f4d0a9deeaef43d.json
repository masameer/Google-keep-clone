{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n    document.body.classList.toggle('dark-mode'); // Toggle the 'dark-mode' class on the body\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: isDarkMode ? '#333' : '#fff',\n        color: isDarkMode ? '#fff' : '#333',\n        padding: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      clasName: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.imgsrc,\n          alt: \"myPic\",\n          className: \"card__img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card__category\",\n            children: \"A Netflix original Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card__title\",\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.link,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Watch Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","_s","isDarkMode","setIsDarkMode","toggleDarkMode","prevMode","document","body","classList","toggle","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","background","color","padding","clasName","className","src","imgsrc","alt","title","href","link","target","rel","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Card.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction App(props){\r\n  \r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n    const toggleDarkMode = () => {\r\n      setIsDarkMode((prevMode) => !prevMode);\r\n      document.body.classList.toggle('dark-mode'); // Toggle the 'dark-mode' class on the body\r\n    };\r\n      \r\n    return (\r\n            <>\r\n             \r\n      <button onClick={toggleDarkMode}>\r\n        {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\r\n      </button>\r\n      <div style={{ background: isDarkMode ? '#333' : '#fff', color: isDarkMode ? '#fff' : '#333', padding: '20px' }}></div>\r\n            <div clasName=\"cards\">\r\n              <div className=\"card\">\r\n                     \r\n                      <img src={props.imgsrc} alt=\"myPic\" className=\"card__img\" />\r\n                      <div className='card__info'>\r\n                        <span className='card__category'>A Netflix original Series</span>\r\n                        <h3 className='card__title'>{props.title}</h3>\r\n                        <a href={props.link} target='_blank' rel=\"noreferrer\">\r\n                           <button>Watch Now</button>\r\n                        </a>\r\n                      </div>\r\n              </div>\r\n            </div>\r\n                \r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,GAAGA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEf,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAEE,QAAQ,IAAK,CAACA,QAAQ,CAAC;IACtCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACQb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBAENd,OAAA;MAAQe,OAAO,EAAEP,cAAe;MAAAM,QAAA,EAC7BR,UAAU,GAAG,sBAAsB,GAAG;IAAqB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACTnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,UAAU,EAAEf,UAAU,GAAG,MAAM,GAAG,MAAM;QAAEgB,KAAK,EAAEhB,UAAU,GAAG,MAAM,GAAG,MAAM;QAAEiB,OAAO,EAAE;MAAO;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChHnB,OAAA;MAAKwB,QAAQ,EAAC,OAAO;MAAAV,QAAA,eACnBd,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAAAX,QAAA,gBAEbd,OAAA;UAAK0B,GAAG,EAAEtB,KAAK,CAACuB,MAAO;UAACC,GAAG,EAAC,OAAO;UAACH,SAAS,EAAC;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DnB,OAAA;UAAKyB,SAAS,EAAC,YAAY;UAAAX,QAAA,gBACzBd,OAAA;YAAMyB,SAAS,EAAC,gBAAgB;YAAAX,QAAA,EAAC;UAAyB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjEnB,OAAA;YAAIyB,SAAS,EAAC,aAAa;YAAAX,QAAA,EAAEV,KAAK,CAACyB;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9CnB,OAAA;YAAG8B,IAAI,EAAE1B,KAAK,CAAC2B,IAAK;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,YAAY;YAAAnB,QAAA,eAClDd,OAAA;cAAAc,QAAA,EAAQ;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eAGR,CAAC;AAGX;AAACd,EAAA,CAlCQF,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAoCZ,eAAeA,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}