{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputList, setInputList] = useState(\"\");\n  const [item, setItem] = useState([]); /* this is for add btn. [] = empty array, created to takeall input we put in as array\r\n                                        which will be used in map() to show it when clicked on button*/\n\n  const ItemEvent = e => {\n    setInputList(e.target.value);\n  };\n  const ListOfitems = () => {\n    setItem(olditems => {\n      return [...olditems, inputList]; /* when we put an input it will go in inputList\r\n                                       then in array & bcause of spread operator all arrat items are considered*/\n    });\n    setInputList(\"\"); /* It is to empty the input field. since doing it after \r\n                      btn is clicked it is being written here. */\n  };\n  const deleteItems = id => {\n    setItem(olditems => {\n      return olditems.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add Items\",\n          onChange: ItemEvent,\n          value: inputList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ListOfitems,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: item.map((itemlist, index) => {\n            return /*#__PURE__*/_jsxDEV(ToDoList, {\n              id: index,\n              text: itemlist,\n              onSelect: deleteItems\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"EaTQFGQ4PvoyEzvCzsef+9P9mSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputList","setInputList","item","setItem","ItemEvent","e","target","value","ListOfitems","olditems","deleteItems","id","filter","arrElem","index","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","itemlist","text","onSelect","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/App.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport ToDoList from \"./ToDoList\";\r\n\r\nconst App=()=>{\r\n        const [inputList,setInputList]=useState(\"\")\r\n        const [item, setItem]=useState([]) /* this is for add btn. [] = empty array, created to takeall input we put in as array\r\n         which will be used in map() to show it when clicked on button*/ \r\n\r\n\r\n        const ItemEvent =(e)=>{\r\n             setInputList(e.target.value)\r\n\r\n\r\n        }\r\n\r\n        const ListOfitems=()=>{\r\n            setItem((olditems)=>{\r\n                   return [...olditems,inputList] /* when we put an input it will go in inputList\r\n                     then in array & bcause of spread operator all arrat items are considered*/\r\n                  \r\n                  })\r\n                  setInputList(\"\")/* It is to empty the input field. since doing it after \r\n                  btn is clicked it is being written here. */\r\n        }\r\n\r\n        const deleteItems=(id)=>{\r\n                   setItem((olditems)=>{\r\n                      return (\r\n                           olditems.filter((arrElem,index)=>{\r\n                                return ( index!== id)         \r\n                           })\r\n                      )\r\n                   })\r\n        }\r\n\r\n      return(\r\n        <>\r\n          <div className=\"main_div\">\r\n             <div className=\"center_div\">\r\n               <br/>\r\n               <h1>ToDo List</h1>\r\n               <br/>\r\n               <input type=\"text\" placeholder=\"Add Items\" onChange={ItemEvent} \r\n                value={inputList}/>\r\n               <button onClick={ListOfitems}>+</button> \r\n\r\n               <ol>\r\n                { item.map((itemlist,index)=>{\r\n\r\n                     return (\r\n                      <ToDoList \r\n\r\n                      key={index}\r\n                      id={index}\r\n                      text={itemlist}\r\n                      onSelect={deleteItems}\r\n                      />\r\n                     ) \r\n\r\n                    })\r\n                }\r\n               </ol>\r\n\r\n             </div>\r\n\r\n          </div>\r\n        </>\r\n      )\r\n            \r\n\r\n}   \r\n\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EACN,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC,EAAC;AAC3C;;EAGQ,MAAMY,SAAS,GAAGC,CAAC,IAAG;IACjBJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAGjC,CAAC;EAED,MAAMC,WAAW,GAACA,CAAA,KAAI;IAClBL,OAAO,CAAEM,QAAQ,IAAG;MACb,OAAO,CAAC,GAAGA,QAAQ,EAACT,SAAS,CAAC,EAAC;AAClD;IAEkB,CAAC,CAAC;IACFC,YAAY,CAAC,EAAE,CAAC;AAClC;EACQ,CAAC;EAED,MAAMS,WAAW,GAAEC,EAAE,IAAG;IACbR,OAAO,CAAEM,QAAQ,IAAG;MACjB,OACKA,QAAQ,CAACG,MAAM,CAAC,CAACC,OAAO,EAACC,KAAK,KAAG;QAC5B,OAASA,KAAK,KAAIH,EAAE;MACzB,CAAC,CAAC;IAEV,CAAC,CAAC;EACb,CAAC;EAEH,oBACEhB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACtBpB,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBpB,OAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLzB,OAAA;UAAAoB,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBzB,OAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLzB,OAAA;UAAO0B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,WAAW;UAACC,QAAQ,EAAEnB,SAAU;UAC9DG,KAAK,EAAEP;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACpBzB,OAAA;UAAQ6B,OAAO,EAAEhB,WAAY;UAAAO,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAExCzB,OAAA;UAAAoB,QAAA,EACGb,IAAI,CAACuB,GAAG,CAAC,CAACC,QAAQ,EAACZ,KAAK,KAAG;YAExB,oBACCnB,OAAA,CAACF,QAAQ;cAGTkB,EAAE,EAAEG,KAAM;cACVa,IAAI,EAAED,QAAS;cACfE,QAAQ,EAAElB;YAAY,GAHjBI,KAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIT,CAAC;UAGJ,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ;EAAC,gBACN,CAAC;AAIX,CAAC;AAAArB,EAAA,CAnEKD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAsET,eAAeA,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}