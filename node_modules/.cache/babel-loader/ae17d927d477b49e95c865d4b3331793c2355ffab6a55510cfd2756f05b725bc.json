{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Accordian.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { questions } from \"./Api\";\nimport MyAccordian from \"./MyAccordian\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Accordian = () => {\n  _s();\n  const [data] = useState(questions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" React Interview and questions \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main_div\",\n      children: data.map(curElem => {\n        const {\n          id\n        } = curElem;\n        return /*#__PURE__*/_jsxDEV(MyAccordian, {\n          ...curElem\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 31\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n_s(Accordian, \"5b1s+qthgMy5tk7q+ov/7RePwuQ=\");\n_c = Accordian;\nexport default Accordian;\nvar _c;\n$RefreshReg$(_c, \"Accordian\");","map":{"version":3,"names":["React","useState","questions","MyAccordian","jsxDEV","_jsxDEV","Fragment","_Fragment","Accordian","_s","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","curElem","id","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Accordian.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { questions } from \"./Api\";\r\nimport MyAccordian from \"./MyAccordian\";\r\n\r\nconst Accordian =()=>{\r\n\r\n       const [data]= useState(questions)\r\n       \r\n       return (\r\n           <>\r\n             <h1> React Interview and questions </h1>\r\n             <section className=\"main_div\">\r\n               \r\n                {\r\n                  data.map((curElem) =>{\r\n                     const {id} = curElem\r\n                         return (\r\n                              <MyAccordian \r\n                                key={id} {...curElem}\r\n                              />\r\n                         )\r\n                    })\r\n                }\r\n            </section>\r\n           </>\r\n\r\n       )\r\n\r\n\r\n}\r\nexport default Accordian"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAEA,CAAA,KAAI;EAAAC,EAAA;EAEd,MAAM,CAACC,IAAI,CAAC,GAAET,QAAQ,CAACC,SAAS,CAAC;EAEjC,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCV,OAAA;MAASW,SAAS,EAAC,UAAU;MAAAL,QAAA,EAGxBD,IAAI,CAACO,GAAG,CAAEC,OAAO,IAAI;QAClB,MAAM;UAACC;QAAE,CAAC,GAAGD,OAAO;QAChB,oBACKb,OAAA,CAACF,WAAW;UAAA,GACGe;QAAO,GAAfC,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAEZ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA,eACT,CAAC;AAKd,CAAC;AAAAN,EAAA,CAzBKD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AA0Bf,eAAeA,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}