{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State variables to store the selected Pokemon ID, name, and moves\n  const [num, setNum] = useState(1); // Default Pokemon ID is 1\n  const [name, setName] = useState(\"\"); // State for Pokemon name\n  const [moves, setMoves] = useState([]); // State for Pokemon moves\n  const [Totalmoves, setTotalmoves] = useState();\n  const [requiremoves, setRequiremoves] = useState();\n\n  // useEffect is used to fetch data when the component mounts or when 'num' changes\n  useEffect(() => {\n    async function getData() {\n      try {\n        // Fetch Pokemon data from PokeAPI based on the selected ID (num)\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`); //num to get different pokemon\n        /*after writing it just once run it wit\r\n        setname & setmoves go to inspect on site check for object, click on it, check for data in that you'll find name of pokemon and moves\r\n        since it's in string  and many moves(so array is used) respectively in useState()  */\n\n        // Update the state with the fetched data\n        setName(response.data.name);\n        setMoves(response.data.moves);\n        setTotalmoves(response.data.moves.length); /*since moves is array of elements(means there are many moves) it\r\n                                                   will return no.of moves i.e length */\n        setRequiremoves(res.data.moves[0].move.name);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n\n    // Call the getData function when the component mounts or when 'num' changes\n    getData();\n  }, [num]); // 'num' is added as a dependency to run the effect when 'num' changes\n\n  // JSX to render the component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You Choose \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this), \" value\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"My name is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total moves \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: Totalmoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"I have\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: moves.map((move, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [move.move.name, \", \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Move by trainer \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: requiremoves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: num,\n      onChange: e => setNum(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"25\",\n        children: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"WrPKW+Dyx665OeNApDjStQAS/KE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","num","setNum","name","setName","moves","setMoves","Totalmoves","setTotalmoves","requiremoves","setRequiremoves","getData","response","get","data","length","res","move","error","console","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","index","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  // State variables to store the selected Pokemon ID, name, and moves\r\n  const [num, setNum] = useState(1); // Default Pokemon ID is 1\r\n  const [name, setName] = useState(\"\"); // State for Pokemon name\r\n  const [moves, setMoves] = useState([]); // State for Pokemon moves\r\n  const [Totalmoves, setTotalmoves] = useState(); \r\n  const [requiremoves, setRequiremoves] = useState(); \r\n\r\n  // useEffect is used to fetch data when the component mounts or when 'num' changes\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        // Fetch Pokemon data from PokeAPI based on the selected ID (num)\r\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${num}`);//num to get different pokemon\r\n        /*after writing it just once run it wit\r\n        setname & setmoves go to inspect on site check for object, click on it, check for data in that you'll find name of pokemon and moves\r\n        since it's in string  and many moves(so array is used) respectively in useState()  */\r\n        \r\n        // Update the state with the fetched data\r\n        setName(response.data.name);\r\n        setMoves(response.data.moves);\r\n        setTotalmoves(response.data.moves.length);/*since moves is array of elements(means there are many moves) it\r\n        will return no.of moves i.e length */\r\n        setRequiremoves(res.data.moves[0].move.name)\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    // Call the getData function when the component mounts or when 'num' changes\r\n    getData();\r\n  }, [num]); // 'num' is added as a dependency to run the effect when 'num' changes\r\n\r\n  // JSX to render the component\r\n  return (\r\n    <>\r\n      {/* Display the selected Pokemon ID */}\r\n      <h1>\r\n        You Choose <span style={{ color: \"red\" }}>{num}</span> value\r\n      </h1>\r\n      \r\n      {/* Display the Pokemon name */}\r\n      <h1>\r\n        My name is <span style={{ color: \"red\" }}>{name}</span>\r\n      </h1>\r\n      <h1>\r\n       Total moves <span style={{ color: \"red\" }}>{Totalmoves}</span>\r\n      </h1>\r\n      \r\n      {/* Display the Pokemon moves */}\r\n      <h1>\r\n        I have{\" \"}\r\n        <span style={{ color: \"red\" }}>\r\n          {/* Map through the 'moves' array and display each move */}\r\n          {moves.map((move, index) => (\r\n            <span key={index}>{move.move.name}, </span>\r\n          ))}\r\n        </span>\r\n      </h1>\r\n      <h1>\r\n       Move by trainer <span style={{ color: \"red\" }}>{requiremoves}</span>\r\n      </h1>\r\n\r\n\r\n      {/* Dropdown to select a different Pokemon ID */}\r\n      <select value={num} onChange={(e) => setNum(e.target.value)}>\r\n        <option value=\"1\">1</option>\r\n        <option value=\"25\">25</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}