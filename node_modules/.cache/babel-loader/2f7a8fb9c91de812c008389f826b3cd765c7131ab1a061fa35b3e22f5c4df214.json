{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Component\\\\CreateNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const InputEvent = e => {\n    /*const value=e.target.value\r\n    const name=e.target.name // here target is method\r\n    it can be written as below i.e object destructing*/\n\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(prevData => {\n      return {\n        ...prevData,\n        //object update {}\n        [name]: value\n      };\n    });\n  };\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: \"\",\n      /* to get new note one after another to get in line it's bcause\r\n      of css */\n      content: \"\"\n    });\n  };\n  const expandIt = () => {\n    setExpand(true);\n  };\n  const minimizeIt = () => {\n    setExpand(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      onDoubleClick: minimizeIt,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: note.title,\n          name: \"title\",\n          onChange: InputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          column: \"10\",\n          value: note.content,\n          name: \"content\",\n          onChange: InputEvent,\n          placeholder: \"Write a Note!\",\n          onClick: expandIt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), expand ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"1TrYuMZKFrVUFxzng76AENSAudU=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNote","props","_s","expand","setExpand","note","setNote","title","content","InputEvent","e","name","value","target","prevData","addEvent","passNote","expandIt","minimizeIt","children","className","onDoubleClick","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","column","onClick","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Component/CreateNote.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst CreateNote=(props)=>{\r\n\r\n       const [expand,setExpand]=useState(false)\r\n\r\n\r\n\r\n         const[note,setNote]=useState({\r\n            title:\"\",\r\n            content:\"\"\r\n         })\r\n\r\n const InputEvent=(e)=>{\r\n    /*const value=e.target.value\r\n    const name=e.target.name // here target is method\r\n    it can be written as below i.e object destructing*/\r\n\r\n    const {name,value}=e.target\r\n   \r\n    setNote((prevData)=>{\r\n        return {\r\n            ...prevData, //object update {}\r\n            [name]: value\r\n         }\r\n    })\r\n }      \r\n \r\n           const addEvent=()=>{\r\n                 props.passNote(note)\r\n                 setNote({\r\n                    title:\"\",  /* to get new note one after another to get in line it's bcause\r\n                    of css */\r\n                    content:\"\"\r\n                 })\r\n           }\r\n       \r\n\r\n           const expandIt=()=>{\r\n            setExpand(true)\r\n           }\r\n\r\n           const minimizeIt=()=>{\r\n            setExpand(false)\r\n           }\r\n\r\n      return (\r\n           <>\r\n           <div className=\"main_note\" onDoubleClick={minimizeIt}>\r\n                    <form>\r\n\r\n                     {expand?   \r\n                        <input type=\"text\"\r\n                         value={note.title}\r\n                         name=\"title\"\r\n                        onChange={InputEvent}\r\n                        placeholder=\"Title\"\r\n                        autoComplete=\"off\"/> : null}\r\n                        <textarea \r\n                        rows=\"5\" \r\n                        column=\"10\"\r\n                        value={note.content}\r\n                        name=\"content\"\r\n                        onChange={InputEvent}\r\n                         placeholder=\"Write a Note!\"\r\n                         onClick={expandIt}\r\n                         >\r\n                         </textarea>\r\n                         {expand?\r\n                        <Button onClick={addEvent}>\r\n                            <AddIcon className=\"plus_sign\"/>\r\n                        </Button>:null}\r\n                    </form>\r\n           </div>\r\n           </>\r\n      )\r\n\r\n}\r\n\r\nexport default CreateNote"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,UAAU,GAAEC,KAAK,IAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAItC,MAAK,CAACY,IAAI,EAACC,OAAO,CAAC,GAACb,QAAQ,CAAC;IAC1Bc,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC;EACX,CAAC,CAAC;EAEV,MAAMC,UAAU,GAAEC,CAAC,IAAG;IACnB;AACJ;AACA;;IAEI,MAAM;MAACC,IAAI;MAACC;IAAK,CAAC,GAACF,CAAC,CAACG,MAAM;IAE3BP,OAAO,CAAEQ,QAAQ,IAAG;MAChB,OAAO;QACH,GAAGA,QAAQ;QAAE;QACb,CAACH,IAAI,GAAGC;MACX,CAAC;IACN,CAAC,CAAC;EACL,CAAC;EAES,MAAMG,QAAQ,GAACA,CAAA,KAAI;IACbd,KAAK,CAACe,QAAQ,CAACX,IAAI,CAAC;IACpBC,OAAO,CAAC;MACLC,KAAK,EAAC,EAAE;MAAG;AAC/B;MACoBC,OAAO,EAAC;IACX,CAAC,CAAC;EACR,CAAC;EAGD,MAAMS,QAAQ,GAACA,CAAA,KAAI;IAClBb,SAAS,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMc,UAAU,GAACA,CAAA,KAAI;IACpBd,SAAS,CAAC,KAAK,CAAC;EACjB,CAAC;EAEN,oBACKP,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACAtB,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAACC,aAAa,EAAEH,UAAW;MAAAC,QAAA,eAC5CtB,OAAA;QAAAsB,QAAA,GAEEhB,MAAM,gBACJN,OAAA;UAAOyB,IAAI,EAAC,MAAM;UACjBV,KAAK,EAAEP,IAAI,CAACE,KAAM;UAClBI,IAAI,EAAC,OAAO;UACbY,QAAQ,EAAEd,UAAW;UACrBe,WAAW,EAAC,OAAO;UACnBC,YAAY,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,GAAG,IAAI,eAC3BhC,OAAA;UACAiC,IAAI,EAAC,GAAG;UACRC,MAAM,EAAC,IAAI;UACXnB,KAAK,EAAEP,IAAI,CAACG,OAAQ;UACpBG,IAAI,EAAC,SAAS;UACdY,QAAQ,EAAEd,UAAW;UACpBe,WAAW,EAAC,eAAe;UAC3BQ,OAAO,EAAEf;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CAAC,EACV1B,MAAM,gBACRN,OAAA,CAACH,MAAM;UAACsC,OAAO,EAAEjB,QAAS;UAAAI,QAAA,eACtBtB,OAAA,CAACF,OAAO;YAACyB,SAAS,EAAC;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,GAAC,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC,gBACJ,CAAC;AAGd,CAAC;AAAA3B,EAAA,CA3EKF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA6EhB,eAAeA,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}