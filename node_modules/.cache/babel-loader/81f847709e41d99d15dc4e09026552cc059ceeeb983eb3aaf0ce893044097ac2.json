{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Component\\\\CreateNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateNote = props => {\n  _s();\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(note => {\n    const storedNote = localStorage.getItem('storedNote');\n    if (storedNote) {\n      setNote(JSON.parse(storedNote));\n    }\n  }, [note]);\n\n  // Update localStorage when 'note' changes\n  useEffect(note => {\n    localStorage.setItem('storedNote', JSON.stringify(note));\n  }, [note]);\n  const InputEvent = e => {\n    /*const value=e.target.value\r\n    const name=e.target.name // here target is method\r\n    it can be written as below i.e object destructing*/\n\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(prevData => {\n      const capitalizeFirstLetter = str => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      };\n      return {\n        ...prevData,\n        [name]: capitalizeFirstLetter(value)\n      };\n    });\n  };\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: \"\",\n      /* to get new note one after another to get in line it's bcause\r\n      of css */\n      content: \"\"\n    });\n  };\n  const expandIt = () => {\n    setExpand(true);\n  };\n  const minimizeIt = () => {\n    setExpand(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      onDoubleClick: minimizeIt,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: note.title,\n          name: \"title\",\n          onChange: InputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          column: \"10\",\n          value: note.content,\n          name: \"content\",\n          onChange: InputEvent,\n          placeholder: \"Write a Note!\",\n          onClick: expandIt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), expand ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_s(CreateNote, \"DjQhbLQMPDD9OaXc2ISp+bmntE0=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","useEffect","Button","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateNote","props","_s","expand","setExpand","note","setNote","title","content","storedNote","localStorage","getItem","JSON","parse","setItem","stringify","InputEvent","e","name","value","target","prevData","capitalizeFirstLetter","str","charAt","toUpperCase","slice","addEvent","passNote","expandIt","minimizeIt","children","className","onDoubleClick","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","rows","column","onClick","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Component/CreateNote.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst CreateNote=(props)=>{\r\n\r\n       const [expand,setExpand]=useState(false)\r\n\r\n\r\n\r\n         const[note,setNote]=useState({\r\n            title:\"\",\r\n            content:\"\"\r\n         })\r\n\r\n         useEffect((note) => {\r\n            const storedNote = localStorage.getItem('storedNote');\r\n            if (storedNote) {\r\n                setNote(JSON.parse(storedNote));\r\n            }\r\n        }, [note]);\r\n    \r\n        // Update localStorage when 'note' changes\r\n        useEffect((note) => {\r\n            localStorage.setItem('storedNote', JSON.stringify(note));\r\n        }, [note]);\r\n\r\n const InputEvent=(e)=>{\r\n    /*const value=e.target.value\r\n    const name=e.target.name // here target is method\r\n    it can be written as below i.e object destructing*/\r\n\r\n    const {name,value}=e.target\r\n   \r\n    setNote((prevData) => {\r\n          const capitalizeFirstLetter = (str) => {\r\n               return (\r\n                    str.charAt(0).toUpperCase() + str.slice(1)\r\n               )\r\n            };\r\n  \r\n          return {\r\n            ...prevData,\r\n            [name]: capitalizeFirstLetter(value)\r\n          };\r\n      });\r\n  \r\n   }      \r\n \r\n           const addEvent=()=>{\r\n                 props.passNote(note)\r\n                 setNote({\r\n                    title:\"\",  /* to get new note one after another to get in line it's bcause\r\n                    of css */\r\n                    content:\"\"\r\n                 })\r\n           }\r\n       \r\n\r\n           const expandIt=()=>{\r\n            setExpand(true)\r\n           }\r\n\r\n           const minimizeIt=()=>{\r\n            setExpand(false)\r\n           }\r\n\r\n      return (\r\n           <>\r\n           <div className=\"main_note\" onDoubleClick={minimizeIt}>\r\n                    <form>\r\n\r\n                     {expand?   \r\n                        <input type=\"text\"\r\n                         value={note.title}\r\n                         name=\"title\"\r\n                        onChange={InputEvent}\r\n                        placeholder=\"Title\"\r\n                        autoComplete=\"off\"/> : null}\r\n                        <textarea \r\n                        rows=\"5\" \r\n                        column=\"10\"\r\n                        value={note.content}\r\n                        name=\"content\"\r\n                        onChange={InputEvent}\r\n                         placeholder=\"Write a Note!\"\r\n                         onClick={expandIt}\r\n                         >\r\n                         </textarea>\r\n                         {expand?\r\n                        <Button onClick={addEvent}>\r\n                            <AddIcon className=\"plus_sign\"/>\r\n                        </Button>:null}\r\n                    </form>\r\n           </div>\r\n           </>\r\n      )\r\n\r\n}\r\n\r\nexport default CreateNote"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}