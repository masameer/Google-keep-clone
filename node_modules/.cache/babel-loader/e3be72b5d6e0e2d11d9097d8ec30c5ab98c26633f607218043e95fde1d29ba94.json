{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\DarkModebtn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeButton = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: isDarkMode ? '#333' : '#fff',\n        color: isDarkMode ? '#fff' : '#333',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isDarkMode ? 'Dark Mode Enabled' : 'Light Mode Enabled'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is some content in your app.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeButton, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = DarkModeButton;\nexport default DarkModeButton;\nvar _c;\n$RefreshReg$(_c, \"DarkModeButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DarkModeButton","_s","isDarkMode","setIsDarkMode","toggleDarkMode","prevMode","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","background","color","padding","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/DarkModebtn.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DarkModeButton = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={toggleDarkMode}>\r\n       \r\n      </button>\r\n\r\n      <div style={{ background: isDarkMode ? '#333' : '#fff', color: isDarkMode ? '#fff' : '#333', padding: '20px' }}>\r\n        <h1>{isDarkMode ? 'Dark Mode Enabled' : 'Light Mode Enabled'}</h1>\r\n        <p>This is some content in your app.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAEE,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAQQ,OAAO,EAAEH;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC,eAETZ,OAAA;MAAKa,KAAK,EAAE;QAAEC,UAAU,EAAEX,UAAU,GAAG,MAAM,GAAG,MAAM;QAAEY,KAAK,EAAEZ,UAAU,GAAG,MAAM,GAAG,MAAM;QAAEa,OAAO,EAAE;MAAO,CAAE;MAAAT,QAAA,gBAC7GP,OAAA;QAAAO,QAAA,EAAKJ,UAAU,GAAG,mBAAmB,GAAG;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClEZ,OAAA;QAAAO,QAAA,EAAG;MAAiC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAnBID,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}