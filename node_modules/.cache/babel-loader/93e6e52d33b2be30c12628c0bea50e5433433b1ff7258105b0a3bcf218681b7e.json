{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputList, setInputList] = useState(\"\");\n  const [item, setItem] = useState([]); /* [] = empty array, created to takeall input we put in as array\r\n                                        which will be used in map() to show it when clicked on button*/\n\n  const ItemEvent = e => {\n    setInputList(e.target.value);\n  };\n  const ListOfitems = () => {\n    setItem(olditems => {\n      return [...olditems, inputList];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add Items\",\n          onChange: ItemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ListOfitems,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: item.map(itemlist => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [itemlist, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"EaTQFGQ4PvoyEzvCzsef+9P9mSA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputList","setInputList","item","setItem","ItemEvent","e","target","value","ListOfitems","olditems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","itemlist","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/App.js"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\nconst App=()=>{\r\n        const [inputList,setInputList]=useState(\"\")\r\n        const [item, setItem]=useState([]) /* [] = empty array, created to takeall input we put in as array\r\n         which will be used in map() to show it when clicked on button*/ \r\n\r\n\r\n        const ItemEvent =(e)=>{\r\n             setInputList(e.target.value)\r\n\r\n        }\r\n\r\n        const ListOfitems=()=>{\r\n            setItem((olditems)=>{\r\n                   return [...olditems,inputList]\r\n                  \r\n                  })\r\n        }\r\n\r\n      return(\r\n        <>\r\n          <div className=\"main_div\">\r\n             <div className=\"center_div\">\r\n               <br/>\r\n               <h1>ToDo List</h1>\r\n               <br/>\r\n               <input type=\"text\" placeholder=\"Add Items\" onChange={ItemEvent} />\r\n               <button onClick={ListOfitems}>+</button> \r\n\r\n               <ol>\r\n                { item.map((itemlist)=>{\r\n\r\n                     return(\r\n                      <li>{itemlist} </li>\r\n                      )\r\n\r\n                    })\r\n                }\r\n               </ol>\r\n\r\n             </div>\r\n\r\n          </div>\r\n        </>\r\n      )\r\n            \r\n\r\n}   \r\n\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EACN,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC,EAAC;AAC3C;;EAGQ,MAAMW,SAAS,GAAGC,CAAC,IAAG;IACjBJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEjC,CAAC;EAED,MAAMC,WAAW,GAACA,CAAA,KAAI;IAClBL,OAAO,CAAEM,QAAQ,IAAG;MACb,OAAO,CAAC,GAAGA,QAAQ,EAACT,SAAS,CAAC;IAE/B,CAAC,CAAC;EACZ,CAAC;EAEH,oBACEL,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACtBf,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBf,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpB,OAAA;UAAAe,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBpB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpB,OAAA;UAAOqB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,WAAW;UAACC,QAAQ,EAAEd;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClEpB,OAAA;UAAQwB,OAAO,EAAEX,WAAY;UAAAE,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAExCpB,OAAA;UAAAe,QAAA,EACGR,IAAI,CAACkB,GAAG,CAAEC,QAAQ,IAAG;YAElB,oBACC1B,OAAA;cAAAe,QAAA,GAAKW,QAAQ,EAAC,GAAC;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAGtB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ;EAAC,gBACN,CAAC;AAIX,CAAC;AAAAhB,EAAA,CA9CKD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiDT,eAAeA,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}