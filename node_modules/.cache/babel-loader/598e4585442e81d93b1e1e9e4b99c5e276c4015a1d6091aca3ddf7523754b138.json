{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\textutils\\\\src\\\\Slot.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet x = \"\";\nlet y = \"\";\nlet z = \"\";\nconst a = [\"üòö\", \"üèπ\", \"üåû\"];\nfor (let i = 0; i < a.length; i++) {\n  let r = Math.floor(Math.random() * 3);\n  let s = a[r];\n  let {\n    x,\n    y,\n    z\n  } = s;\n}\nconst Slot = () => {\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot+timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 40\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = Slot;\nexport default Slot;\nvar _c;\n$RefreshReg$(_c, \"Slot\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","x","y","z","a","i","length","r","Math","floor","random","s","Slot","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/textutils/src/Slot.js"],"sourcesContent":["import React from \"react\";\r\n\r\nlet x=\"\"\r\nlet y=\"\"\r\nlet z=\"\"\r\n\r\nconst a=[\"üòö\",\"üèπ\",\"üåû\"]\r\n\r\n         for(let i=0;i<a.length;i++){\r\n      \r\n                  let r=Math.floor(Math.random()*3)\r\n                  let s=a[r]\r\n                  let {x,y,z}=s\r\n         }      \r\n\r\nconst Slot =() => {\r\n         \r\n                 if(x===y && y===z){\r\n                            return (\r\n                                    <>\r\n                                       <div className=\"slot+timer\">\r\n                                           <h1>\r\n                                                 {x} {y} {z}\r\n                                           </h1>\r\n                                          <h1>This is matching</h1>\r\n                                       </div>\r\n            \r\n            \r\n                                    </>\r\n                                   )\r\n                                  }\r\n        }\r\n    \r\n\r\n    export default Slot"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,IAAIC,CAAC,GAAC,EAAE;AACR,IAAIC,CAAC,GAAC,EAAE;AACR,IAAIC,CAAC,GAAC,EAAE;AAER,MAAMC,CAAC,GAAC,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC;AAEf,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,CAAC,CAACE,MAAM,EAACD,CAAC,EAAE,EAAC;EAElB,IAAIE,CAAC,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC;EACjC,IAAIC,CAAC,GAACP,CAAC,CAACG,CAAC,CAAC;EACV,IAAI;IAACN,CAAC;IAACC,CAAC;IAACC;EAAC,CAAC,GAACQ,CAAC;AACtB;AAET,MAAMC,IAAI,GAAEA,CAAA,KAAM;EAED,IAAGX,CAAC,KAAGC,CAAC,IAAIA,CAAC,KAAGC,CAAC,EAAC;IACP,oBACQL,OAAA,CAAAE,SAAA;MAAAa,QAAA,eACGf,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBf,OAAA;UAAAe,QAAA,GACOZ,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACNpB,OAAA;UAAAe,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC,gBAGP,CAAC;EAEL;AAC1B,CAAC;AAAAC,EAAA,GAhBHP,IAAI;AAmBN,eAAeA,IAAI;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}